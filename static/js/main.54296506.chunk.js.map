{"version":3,"sources":["components/Login.js","components/Banner.js","components/Footer.js","components/Header.js","components/Search.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","Login","state","someKey","style","width","textAlign","firebaseAuth","React","Component","Banner","className","Col","sm","Card","marginLeft","marginTop","padding","Body","Text","src","alt","this","setState","Footer","href","icon","faGithub","faDev","Header","Navbar","bg","variant","fixed","Brand","height","SORT_OPTIONS","name","value","direction","connector","AppSearchAPIConnector","searchKey","engineName","hostIdentifier","endpointBase","config","alwaysSearchOnInitialLoad","searchQuery","result_fields","title","snippet","size","fallback","nps_link","raw","description","disjunctiveFacets","facets","world_heritage_site","type","states","acres","ranges","from","to","location","center","unit","date_established","moment","subtract","toISOString","visitors","autocompleteQuery","results","resultsPerPage","suggestions","types","documents","fields","apiConnector","Search","Container","fluid","SearchProvider","mapContextToProps","wasSearched","ErrorBoundary","Layout","header","SearchBox","autocompleteMinimumCharacters","autocompleteResults","linkTarget","sectionTitle","titleField","urlField","shouldTrackClickThrough","clickThroughTags","autocompleteSuggestions","debounceLength","sideContent","Sorting","label","sortOptions","Facet","field","filterType","isFilterable","view","BooleanFacet","SingleLinksFacet","SingleSelectFacet","bodyContent","Results","bodyHeader","Fragment","PagingInfo","ResultsPerPage","bodyFooter","Paging","Wrapper","id","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54296506.chunk.js","sourcesContent":["// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCWcY_15S_3xRn-6McM6vRADGo9V9UnGxk\",\n  authDomain: \"web-portal-a69d1.firebaseapp.com\",\n  databaseURL: \"https://web-portal-a69d1.firebaseio.com\",\n  projectId: \"web-portal-a69d1\",\n  storageBucket: \"web-portal-a69d1.appspot.com\",\n  messagingSenderId: \"929537871676\",\n  appId: \"1:929537871676:web:39b98c84f5599c004dd839\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ]\n};\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return (\n      <div style={{width: \"100%\", textAlign:\"center\"}}>\n        <h1> Login </h1>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport Login from './Login';\nimport { Card, Col } from 'react-bootstrap';\n\nclass Banner extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return (\n        <section className=\"banner style1 orient-left content-align-left image-position-right onload-image-fade-in onload-content-fade-right\">\n          <Col sm={6}>\n            <Card style={{width: \"50%\", marginLeft: \"8em\", marginTop: \"12em\", padding: \"3em\" }}>\n              <Card.Body>\n                <Card.Text>\n                  <Login />\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col sm={6} className=\"image\">\n            <img src=\"img/banner.jpg\" alt=\"\" />\n          </Col>\n        </section>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default Banner;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faDev } from '@fortawesome/free-brands-svg-icons';\n\nclass Footer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return (\n        <footer className=\"wrapper style1 align-center\">\n            <div className=\"inner\">\n                <ul className=\"icons\">\n                    <li> <a href=\"https://github.com/pay-n/test-protect\"> <FontAwesomeIcon icon={ faGithub } /></a></li>\n                    <li> <a href=\"https://openhacks.devpost.com\"> <FontAwesomeIcon icon={ faDev } /></a></li>\n                </ul>\n                <p>&copy; PAYN Design: <a href=\"https://html5up.net\">HTML5 UP</a>.</p>\n            </div>\n        </footer>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      someKey: 'someValue'\n    };\n  }\n\n  render() {\n    return (\n        <header>\n          <Navbar bg=\"light\" variant=\"light\" fixed=\"top\">\n                  <Navbar.Brand href=\"#\">\n                    <img \n                      width=\"70%\"\n                      height=\"70%\"\n                      src=\"img/test-protect-header.png\"\n                      className=\"d-inline-block align-top\" \n                      alt=\"Test protect logo\"\n                      />\n                  </Navbar.Brand>\n          </Navbar>\n        </header>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      someKey: 'otherValue'\n    });\n  }\n}\n\nexport default Header;","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport moment from 'moment';\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n\nimport {\n    ErrorBoundary,\n    Facet,\n    Paging,\n    PagingInfo,\n    Results,\n    ResultsPerPage,\n    SearchBox,\n    SearchProvider,\n    Sorting,\n    WithSearch\n} from \"@elastic/react-search-ui\";\nimport {BooleanFacet, Layout, SingleLinksFacet, SingleSelectFacet} from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nconst SORT_OPTIONS = [\n    {\n        name: \"Relevance\",\n        value: \"\",\n        direction: \"\"\n    },\n    {\n        name: \"Title\",\n        value: \"title\",\n        direction: \"asc\"\n    }\n];\n\nconst connector = new AppSearchAPIConnector({\n    searchKey: \"search-371auk61r2bwqtdzocdgutmg\",\n    engineName: \"search-ui-examples\",\n    hostIdentifier: \"host-2376rb\",\n    endpointBase: \"\"\n});\n\nconst config = {\n    alwaysSearchOnInitialLoad: true,\n    searchQuery: {\n        result_fields: {\n            title: {\n                snippet: {\n                    size: 100,\n                    fallback: true\n                }\n            },\n            nps_link: {\n                raw: {}\n            },\n            description: {\n                snippet: {\n                    size: 100,\n                    fallback: true\n                }\n            }\n        },\n        disjunctiveFacets: [\"acres\", \"states\", \"date_established\", \"location\"],\n        facets: {\n            world_heritage_site: {type: \"value\"},\n            states: {type: \"value\", size: 30},\n            acres: {\n                type: \"range\",\n                ranges: [\n                    {from: -1, name: \"Any\"},\n                    {from: 0, to: 1000, name: \"Small\"},\n                    {from: 1001, to: 100000, name: \"Medium\"},\n                    {from: 100001, name: \"Large\"}\n                ]\n            },\n            location: {\n                // San Francisco. In the future, make this the user's current position\n                center: \"37.7749, -122.4194\",\n                type: \"range\",\n                unit: \"mi\",\n                ranges: [\n                    {from: 0, to: 100, name: \"Nearby\"},\n                    {from: 100, to: 500, name: \"A longer drive\"},\n                    {from: 500, name: \"Perhaps fly?\"}\n                ]\n            },\n            date_established: {\n                type: \"range\",\n\n                ranges: [\n                    {\n                        from: moment()\n                            .subtract(50, \"years\")\n                            .toISOString(),\n                        name: \"Within the last 50 years\"\n                    },\n                    {\n                        from: moment()\n                            .subtract(100, \"years\")\n                            .toISOString(),\n                        to: moment()\n                            .subtract(50, \"years\")\n                            .toISOString(),\n                        name: \"50 - 100 years ago\"\n                    },\n                    {\n                        to: moment()\n                            .subtract(100, \"years\")\n                            .toISOString(),\n                        name: \"More than 100 years ago\"\n                    }\n                ]\n            },\n            visitors: {\n                type: \"range\",\n                ranges: [\n                    {from: 0, to: 10000, name: \"0 - 10000\"},\n                    {from: 10001, to: 100000, name: \"10001 - 100000\"},\n                    {from: 100001, to: 500000, name: \"100001 - 500000\"},\n                    {from: 500001, to: 1000000, name: \"500001 - 1000000\"},\n                    {from: 1000001, to: 5000000, name: \"1000001 - 5000000\"},\n                    {from: 5000001, to: 10000000, name: \"5000001 - 10000000\"},\n                    {from: 10000001, name: \"10000001+\"}\n                ]\n            }\n        }\n    },\n    autocompleteQuery: {\n        results: {\n            resultsPerPage: 5,\n            result_fields: {\n                title: {\n                    snippet: {\n                        size: 100,\n                        fallback: true\n                    }\n                },\n                nps_link: {\n                    raw: {}\n                }\n            }\n        },\n        suggestions: {\n            types: {\n                documents: {\n                    fields: [\"title\", \"description\"]\n                }\n            },\n            size: 4\n        }\n    },\n    apiConnector: connector\n};\n\nconst Search = () => {\n    return (\n        <Container fluid>\n            <SearchProvider config={config}>\n                <WithSearch mapContextToProps={({wasSearched}) => ({wasSearched})}>\n                    {({wasSearched}) => {\n                        return (\n                            <ErrorBoundary>\n                                <Layout\n                                    header={\n                                        <SearchBox\n                                            autocompleteMinimumCharacters={3}\n                                            //searchAsYouType={true}\n                                            autocompleteResults={{\n                                                linkTarget: \"_blank\",\n                                                sectionTitle: \"Results\",\n                                                titleField: \"title\",\n                                                urlField: \"nps_link\",\n                                                shouldTrackClickThrough: true,\n                                                clickThroughTags: [\"test\"]\n                                            }}\n                                            autocompleteSuggestions={true}\n                                            debounceLength={0}\n                                        />\n                                    }\n                                    sideContent={\n                                        <div>\n                                            {wasSearched && (\n                                                <Sorting label={\"Sort by\"} sortOptions={SORT_OPTIONS}/>\n                                            )}\n                                            <Facet\n                                                field=\"states\"\n                                                label=\"States\"\n                                                filterType=\"any\"\n                                                isFilterable={true}\n                                            />\n                                            <Facet\n                                                field=\"world_heritage_site\"\n                                                label=\"World Heritage Site?\"\n                                                view={BooleanFacet}\n                                            />\n                                            <Facet\n                                                field=\"visitors\"\n                                                label=\"Visitors\"\n                                                view={SingleLinksFacet}\n                                            />\n                                            <Facet\n                                                field=\"date_established\"\n                                                label=\"Date Established\"\n                                                filterType=\"any\"\n                                            />\n                                            <Facet\n                                                field=\"location\"\n                                                label=\"Distance\"\n                                                filterType=\"any\"\n                                            />\n                                            <Facet\n                                                field=\"acres\"\n                                                label=\"Acres\"\n                                                view={SingleSelectFacet}\n                                            />\n                                        </div>\n                                    }\n                                    bodyContent={\n                                        <Results\n                                            titleField=\"title\"\n                                            urlField=\"nps_link\"\n                                            shouldTrackClickThrough={true}\n                                        />\n                                    }\n                                    bodyHeader={\n                                        <React.Fragment>\n                                            {wasSearched && <PagingInfo/>}\n                                            {wasSearched && <ResultsPerPage/>}\n                                        </React.Fragment>\n                                    }\n                                    bodyFooter={<Paging/>}\n                                />\n                            </ErrorBoundary>\n                        );\n                    }}\n                </WithSearch>\n            </SearchProvider>\n        </Container>\n    );\n}\n\nexport default Search;\n","import React from 'react';\nimport  Banner  from './Banner';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Search from './Search';\n\nconst Wrapper = () => {\n    return (\n        <main id=\"wrapper\" className=\"divided\">\n            <Header />\n            <Banner />\n            <Search />\n            <Footer />\n        </main>\n    );\n}\n\nexport default Wrapper;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Wrapper from './components/Wrapper';\nimport Search from './components/Search';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n            <Wrapper />\n        </Route>\n        <Route exact path=\"/search\">\n              <Search />\n        </Route>\n     </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './noscript.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}